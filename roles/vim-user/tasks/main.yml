---
- name: Install vim and denendancies for plugins for debian distros
  become: yes
  when: ansible_facts['os_family'] == 'Debian'
  apt:
    pkg:
      - vim
      - git
      - fonts-powerline
    state: present

- debug:
    msg: "{{ ansible_facts['os_family'] }}"

- name: Ensure .vim/{autoload,bundle} directory exists
  file:
    path: "{{ item }}"
    state: directory
    recurse: no
    mode: 0750
  loop:
    - "{{ vim_directory }}"
    - "{{ vim_directory }}/autoload"
    - "{{ vim_bundle_directory }}"

# https://github.com/tpope/vim-pathogen#installation
- name: Add vim-pathogen for plugin management
  get_url:
    dest: "{{ vim_directory }}/autoload/pathogen.vim"
    url: https://tpo.pe/pathogen.vim

- name: Get a list of currently installed plugins on the machine
  shell: "ls -1 {{ vim_bundle_directory }}"
  register: active_bundle_plugins
  changed_when: false

- name: Determining whether or not plugin directory has been modifed.
  set_fact:
    vim_bundle_dir_modified: "{{ active_bundle_plugins.stdout_lines | sort  !=  vim_pathogen_plugins.keys() | list | sort  }}"
- name: Add plugins for vim-pathogen
  git:
    dest: "{{ vim_bundle_directory }}/{{ item.key }}"
    repo: "{{ item.value.url }}"
    clone: yes
    update: yes
    recursive: no
  loop: "{{ lookup('dict', vim_pathogen_plugins) }}"
  changed_when: vim_bundle_dir_modified

- name: Remove any inactive plugins
  file:
    path: "{{ vim_bundle_directory }}/{{ item }}"
    state: absent
  when: item not in vim_pathogen_plugins.keys()
  with_items: "{{ active_bundle_plugins.stdout_lines }}"

- name: Ensure .vimrc config in place
  tags: ['vimrc']
  copy:
    src: vimrc
    dest: "{{ vimrc }}"
    backup: yes
    mode: 0640
